{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erick/Documentos/React/TodoApp/frontend/src/todo/todo.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport PageHeader from '../template/pageHeader';\nimport TodoForm from './todoForm';\nimport TodoList from './todoList';\nconst URL = 'http://localhost:3003/api/todos';\nexport default class Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      lista: []\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleMarkAsDone = this.handleMarkAsDone.bind(this);\n    this.handleMarkAsPending = this.handleMarkAsPending.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.refresh();\n  }\n\n  refresh(description = '') {\n    const search = description ? `&description__regex=/${description}/` : '';\n    axios.get(`${URL}?sort=-createdAt${search}`).then(resp => this.setState({ ...this.state,\n      description,\n      list: resp.data\n    }));\n  }\n\n  handleSearch() {\n    this.refresh(this.state.description);\n  }\n\n  handleChange(e) {\n    this.setState({ ...this.state,\n      description: e.target.value\n    });\n  }\n\n  handleAdd() {\n    const description = this.state.description;\n    axios.post(URL, {\n      description\n    }).then(resp => this.refresh());\n  }\n\n  handleRemove(todo) {\n    axios.delete(`${URL}/${todo._id}`).then(resp => this.refresh(this.state.description));\n  }\n\n  handleMarkAsDone(todo) {\n    axios.put(`${URL}/${todo._id}`, { ...todo,\n      done: true\n    }).then(resp => this.refresh(this.state.description));\n  }\n\n  handleMarkAsPending(todo) {\n    axios.put(`${URL}/${todo._id}`, { ...todo,\n      done: false\n    }).then(resp => this.refresh(this.state.description));\n  }\n\n  handleClear() {\n    this.refresh();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        name: \"Tarefas\",\n        small: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        description: this.state.description,\n        handleChange: this.handleChange,\n        handleSearch: this.handleSearch,\n        handleClear: this.handleClear,\n        handleAdd: this.handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        list: this.state.list,\n        handleMarkAsDone: this.handleMarkAsDone,\n        handleMarkAsPending: this.handleMarkAsPending,\n        handleRemove: this.handleRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/erick/Documentos/React/TodoApp/frontend/src/todo/todo.jsx"],"names":["React","Component","axios","PageHeader","TodoForm","TodoList","URL","Todo","constructor","props","state","description","lista","handleAdd","bind","handleChange","handleRemove","handleMarkAsDone","handleMarkAsPending","handleSearch","handleClear","refresh","search","get","then","resp","setState","list","data","e","target","value","post","todo","delete","_id","put","done","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport axios from 'axios'\n\nimport PageHeader from '../template/pageHeader'\nimport TodoForm from './todoForm'\nimport TodoList from './todoList'\n\n\nconst URL = 'http://localhost:3003/api/todos'\n\nexport default class Todo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            description: '', lista: []\n        }\n\n        this.handleAdd = this.handleAdd.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleRemove = this.handleRemove.bind(this)\n        this.handleMarkAsDone = this.handleMarkAsDone.bind(this)\n        this.handleMarkAsPending = this.handleMarkAsPending.bind(this)\n        this.handleSearch = this.handleSearch.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n\n        this.refresh()\n    }\n\n    refresh(description = '') {\n        const search = description ? `&description__regex=/${description}/` : ''\n        axios.get(`${URL}?sort=-createdAt${search}`).then(resp => this.setState({...this.state, description, list: resp.data}))\n    }\n\n    handleSearch() {\n        this.refresh(this.state.description)\n    }\n\n    handleChange(e) {\n        this.setState({...this.state, description: e.target.value})\n    }\n    \n    handleAdd() {\n        const description = this.state.description\n        axios.post(URL, {description}).then(resp => this.refresh())\n    }\n\n    handleRemove(todo) {\n        axios.delete(`${URL}/${todo._id}`).then(resp => this.refresh(this.state.description))\n    }\n\n    handleMarkAsDone(todo) {\n        axios.put(`${URL}/${todo._id}`, {...todo, done: true}).then(resp => this.refresh(this.state.description))\n    }\n\n    handleMarkAsPending(todo) {\n        axios.put(`${URL}/${todo._id}`, {...todo, done: false}).then(resp => this.refresh(this.state.description))\n    }\n\n    handleClear() {\n        this.refresh()\n    }\n\n    render() {\n        return (\n            <div>\n                <PageHeader name=\"Tarefas\" small=\"Cadastro\"/>\n                <TodoForm description={this.state.description}\n                handleChange={this.handleChange}\n                handleSearch={this.handleSearch}\n                handleClear={this.handleClear}\n                handleAdd={this.handleAdd}/>\n                <TodoList list={this.state.list}\n                handleMarkAsDone={this.handleMarkAsDone}\n                handleMarkAsPending={this.handleMarkAsPending}\n                handleRemove={this.handleRemove}/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}